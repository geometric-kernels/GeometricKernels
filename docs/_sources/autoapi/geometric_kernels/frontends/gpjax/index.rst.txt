geometric_kernels.frontends.gpjax
=================================

.. py:module:: geometric_kernels.frontends.gpjax

.. autoapi-nested-parse::

   GPJax kernel wrapper.

   A tutorial on how to use this wrapper to run Gaussian process regression on
   a geometric space is available in the
   :doc:`frontends/GPJax.ipynb </examples/frontends/GPJax>` notebook.





Module Contents
---------------

.. py:class:: GPJaxGeometricKernel

   Bases: :py:obj:`gpjax.kernels.AbstractKernel`


   GPJax wrapper for :class:`~.kernels.BaseGeometricKernel`.

   A tutorial on how to use this wrapper to run Gaussian process regression on
   a geometric space is available in the
   :doc:`frontends/GPJax.ipynb </examples/frontends/GPJax>` notebook.

   .. note::
       Remember that the `base_kernel` itself does not store any of its
       hyperparameters (like `lengthscale` and `nu`). If you do not set them
       manually—when initializing the object or after, by setting the
       properties—this wrapper will use the values provided by
       `base_kernel.init_params`.

   .. note::
       Unlike the frontends for GPflow and GPyTorch, GPJaxGeometricKernel
       does not have the `trainable_nu` parameter which determines whether or
       not the smoothness parameter nu is to be optimized over. By default, it
       is not trainable. If you want to make it trainable, do
       :code:`kernel = kernel.replace_trainable(nu=False)` on an instance of
       the `GPJaxGeometricKernel`.

   :param base_kernel:
       The kernel to wrap.
   :type base_kernel: geometric_kernels.kernels.BaseGeometricKernel
   :param name:
       Optional kernel name (inherited from `gpjax.kernels.AbstractKernel`).

       Defaults to "Geometric Kernel".
   :type name: str
   :param lengthscale:
       Initial value of the length scale.

       If not given or set to None, uses the default value of the
       `base_kernel`, as provided by its `init_params` method.
   :type lengthscale: Union[ScalarFloat, Float[Array, " D"]]
   :param nu:
       Initial value of the smoothness parameter nu.

       If not given or set to None, uses the default value of the
       `base_kernel`, as provided by its `init_params` method.
   :type nu: ScalarFloat
   :param variance:
       Initial value of the variance (outputscale) parameter.

       Defaults to 1.0.
   :type variance: ScalarFloat


   .. py:method:: __call__(x, y)

      Compute the cross-covariance matrix between two batches of vectors (or
      batches of matrices) of inputs.

      :param x:
          A batch of N inputs, each of which is a matrix of size D1xD2,
          or a vector of size D2 if D1 is absent.
      :param y:
          A batch of M inputs, each of which is a matrix of size D1xD2,
          or a vector of size D2 if D1 is absent.

      :return:
          The N x M cross-covariance matrix.



   .. py:property:: space
      :type: beartype.typing.Union[geometric_kernels.spaces.Space, beartype.typing.List[geometric_kernels.spaces.Space]]


      Alias to the `base_kernel`\ s space property.



